{"version":3,"sources":["components/Map.jsx","components/Profile.jsx","components/Home.jsx","components/Nav.jsx","components/Register.jsx","components/Login.jsx","components/ScratchMap.jsx","App.js","index.js"],"names":["Map","state","countryCodes","countryNames","data","blank","title","titleSet","choiceIsVisited","visitedColor","bucketListColor","handleColorChange","e","setState","eval","target","value","handleChange","handleFormSubmit","saveData","visited","bucketList","console","log","handleClick","countryCode","addCountryToState","countriesIndex","colorChoice","codes","names","otherCodes","otherNames","newState","removeCountryFromState","indexOf","getName","splice","this","map","backgroundColor","zoomOnScroll","containerStyle","width","height","onRegionClick","containerClassName","regionStyle","initial","fill","stroke","hover","cursor","selected","selectedHover","regionsSelectable","series","regions","values","scale","normalizeFunction","Container","onSubmit","type","onChange","ButtonContainer","onClick","country","i","React","Component","styled","div","Profile","props","name","Home","Nav","loggedIn","to","logOut","Register","firstName","lastName","email","password","confirmPassword","nameChange","event","emailChange","passwordChange","confirmPasswordChange","handleRegister","preventDefault","newUser","onRegister","className","required","id","Login","handleLogin","existingUser","onLogin","ScratchMap","checkedSession","user","userLogout","axios","delete","withCredentials","then","result","userLogin","post","loginSuccess","catch","loginFail","userRegistered","history","push","get","path","withRouter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.947343f5.chunk.js","sourcesContent":["import React from \"react\";\nimport { VectorMap } from \"react-jvectormap\";\nimport { jsx } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport axios from \"axios\";\nimport { getName } from \"country-list\";\n\nclass Map extends React.Component {\n  state = {\n    countryCodes: [\n      [], // visited countries go here\n      []  // bucket list countries go here\n    ],\n    countryNames: [\n      [], // visited countries go here\n      []  // bucket list countries go here\n    ],\n    data: {blank: 5},\n    title: \"\",\n    titleSet: false,\n    choiceIsVisited: true,\n    visitedColor: '#00cc00',\n    bucketListColor: '#dddd00'\n  };\n\n  handleColorChange = e => {\n    this.setState({ choiceIsVisited: eval(e.target.value) });\n  };\n\n  handleChange = e => {\n    this.setState({\n      title: e.target.value\n    });\n  };\n\n  handleFormSubmit = () => {\n    this.setState({\n      titleSet: true\n    });\n    this.saveData();\n  };\n\n  saveData = () => {\n    const data = {\n      visited: this.state.countryCodes[0],\n      bucketList: this.state.countryCodes[1],\n      title: this.state.title\n    }\n    console.log(data);\n    // axios.post('http://localhost:3000/visits', data, {withCredentials: true}).then( (result )=> {\n\n    // })\n  }\n\n  componentDidMount() {\n    // axios.get('http://localhost:3000/visits', {withCredentials: true}).then( (result) => {\n    //   const visitedNames = result.data.visited.map(visited => getName(visited));\n    //   const bucketNames = result.data.bucketList.map(bucket => getName(bucket));\n    //   this.setState({\n    //     countryCodes: [result.visited, result.bucketList],\n    //     countryNames: [visitedNames, bucketNames],\n    //     title: result.title\n    //   })\n    // })\n  }\n\n\n  handleClick = (e, countryCode) => {\n    const VISITED_COUNTRIES = 0, BUCKET_LIST_COUNTRIES = 1;\n    if (this.state.choiceIsVisited) {\n      this.addCountryToState(VISITED_COUNTRIES, countryCode, this.state.choiceIsVisited);\n    } else {\n      this.addCountryToState(BUCKET_LIST_COUNTRIES, countryCode, this.state.choiceIsVisited);\n    }\n    this.saveData()\n  };\n\n  addCountryToState = (countriesIndex, countryCode, colorChoice) => {\n    let codes = this.state.countryCodes[countriesIndex];\n    let names = this.state.countryNames[countriesIndex];\n\n    let otherCodes = this.state.countryCodes[(countriesIndex + 1) % 2];\n    let otherNames = this.state.countryNames[(countriesIndex + 1) % 2];\n\n    const newState = {\n      countryCodes: this.state.countryCodes,\n      countryNames: this.state.countryNames,\n      data: this.state.data\n    };\n\n    this.removeCountryFromState(otherCodes, otherNames, countryCode);\n\n    if (codes.indexOf(countryCode) === -1) {\n      newState.data[countryCode] = colorChoice ? 5 : 1;\n      newState.countryCodes[countriesIndex] = [...codes, countryCode];\n      newState.countryNames[countriesIndex] = [...names, getName(countryCode)];\n      this.setState(newState);\n    } else {\n      this.removeCountryFromState(codes, names, countryCode);\n      delete newState.data[countryCode];\n      newState.countryCodes[countriesIndex] = codes;\n      newState.countryNames[countriesIndex] = names;\n      this.setState(newState);\n    }\n  }\n\n  removeCountryFromState = (countryCodes, countryNames, countryCode) => {\n    if (countryCodes.indexOf(countryCode) !== -1) {\n      countryCodes.splice(countryCodes.indexOf(countryCode), 1);\n      countryNames.splice(countryNames.indexOf(getName(countryCode)), 1);\n    }\n  }\n\n  render() {\n    const { countryNames, data, title, titleSet, visitedColor, bucketListColor } = this.state;\n    return (\n      <div>\n        <VectorMap\n          map={\"world_mill\"}\n          backgroundColor=\"transparent\" // change it to ocean blue: #0077be or a lighter blue which suits green: #00a1ff\n          zoomOnScroll={false}\n          containerStyle={{\n            width: \"100%\",\n            height: \"520px\"\n          }}\n          onRegionClick={this.handleClick} // gets the country code\n          containerClassName=\"map\"\n          regionStyle={{\n            initial: {\n              fill: \"#e4e4e4\",\n              \"fill-opacity\": 0.9,\n              stroke: \"none\",\n              \"stroke-width\": 0,\n              \"stroke-opacity\": 0\n            },\n            hover: {\n              \"fill-opacity\": 0.8,\n              cursor: \"pointer\"\n            },\n            selected: {\n              fill: \"#e4e4e4\" // color for the clicked country\n            },\n            selectedHover: {}\n          }}\n          regionsSelectable={true}\n          series={{\n            regions: [\n              {\n                values: data, // this is the map data\n                scale: [bucketListColor, visitedColor], // your color name's here\n                normalizeFunction: \"polynomial\"\n              }\n            ]\n          }}\n        />\n        <Container>\n          {titleSet ? (\n            <h3>{title}</h3>\n          ) : (\n            <div>\n              <h4>Set your map's title:</h4>\n              <form onSubmit={this.handleFormSubmit}>\n                <input type=\"text\" onChange={this.handleChange} />\n              </form>\n            </div>\n          )}\n          <ButtonContainer>\n            <button value={true} onClick={this.handleColorChange}>{'Select visited countries'}</button>\n            <button value={false} onClick={this.handleColorChange}>{'Select bucket-list countries'}</button>\n          </ButtonContainer>\n          <div>\n            {[...countryNames[0], ...countryNames[1]].map((country, i) => (\n              <div key={i}>{country}</div>\n            ))}\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n\nconst Container = styled.div`\n  text-align: center;\n  input {\n    padding: 10px;\n    border-radius: 5px;\n    border-shadow: 0;\n    border-style: solid;\n    font-size: 16px;\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  position: absolute;\n`;\n","function Profile(props) {\n  return (\n    <div>\n      {props.name}'s Profile\n    </div>\n  );\n}\nexport default Profile;","function Home() {\n  return (\n    <div>\n      Scratch Pad v-2\n    </div>\n  );\n}\n\nexport default Home;","import {\n    Link\n} from 'react-router-dom';\n\nfunction Nav(props) {\n    if (props.loggedIn) {\n        return (\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"/\">Scratch Pad</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/profile\">My Profile</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/map\">Map</Link>\n                    </li>\n                    <li>\n                        <button onClick={props.logOut}>Logout {props.name}</button>\n                    </li>\n                </ul>\n            </nav>\n        ) \n    } else {\n        return (\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"/\">Scratch Pad</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/register\">Sign up</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/login\">Login</Link>\n                    </li>\n                </ul>\n            </nav>\n        )\n    }\n}\n  export default Nav;","import React from 'react';\nimport '../css/register.css';\n\n\nclass Register extends React.Component {\n    state = {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n    };\n\n    nameChange = event => {\n        this.setState({ name: event.target.value });\n    };\n    emailChange = event => {\n        this.setState({ email: event.target.value });\n    };\n    passwordChange = event => {\n        this.setState({ password: event.target.value });\n    };\n    confirmPasswordChange = event => {\n        this.setState({ confirmPassword: event.target.value });\n    };\n\n    handleRegister = event => {\n        event.preventDefault();\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword\n        }\n        console.log(\"NEW MINION ATTAINED\", newUser)\n        this.props.onRegister(newUser);\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleRegister}>\n                <label className=\"registerLabel\">\n                    Name:\n                    <input required name=\"name\" onChange={this.nameChange} />\n                </label>\n                <label className=\"registerLabel\">\n                    Email:\n                    <input type=\"email\" required name=\"email\" onChange={this.emailChange}/>\n                </label>\n                <label className=\"registerLabel\">\n                    Password:\n                    <input type=\"password\" required name=\"password\" onChange={this.passwordChange}/>\n                </label>\n                <label className=\"registerLabel\">\n                    Confirm Password:\n                    <input type=\"password\" required name=\"confirmPassword\" onChange={this.confirmPasswordChange}/>\n                </label>\n                <button type=\"submit\" id=\"register\">Submit</button>\n            </form>\n        );\n      }\n}\n  \n  export default Register;","import React from 'react';\nimport '../css/login.css';\n\nclass Login extends React.Component {\n    state = {\n        email: \"\",\n        password: \"\"\n    };\n\n    emailChange = event => {\n        this.setState({ email: event.target.value });\n    };\n    passwordChange = event => {\n        this.setState({ password: event.target.value });\n    };\n\n    handleLogin = event => {\n        event.preventDefault();\n        const existingUser = {\n            email: this.state.email,\n            password: this.state.password\n        }\n        this.props.onLogin(existingUser)\n    }\n\n    render(){\n        return (\n            <form onSubmit={this.handleLogin}>\n                <label className=\"loginLabel\">\n                    Email:\n                    <input type=\"email\" required name=\"email\" onChange={this.emailChange}/>\n                </label>\n                <label>\n                    Password:\n                    <input type=\"password\" required name=\"password\" onChange={this.passwordChange}/>\n                </label>\n                <button type=\"submit\" id=\"register\">Login</button>\n            </form>\n        )\n    }\n  };\n\n  export default Login;","import React from 'react';\nimport '../css/scratchMap.css';\nimport Profile from './Profile';\nimport Home from './Home';\nimport Nav from './Nav';\nimport Register from './Register';\nimport Login from './Login';\nimport axios from 'axios';\nimport Map from './Map';\nimport {\n    Switch,\n    Route,\n    withRouter,\n} from 'react-router-dom';\nclass ScratchMap extends React.Component {\n\n    state = {\n        checkedSession: false,\n        loggedIn: false,\n        user: {},\n    }\n\n    loginSuccess(user) {\n        this.setState({\n            checkedSession: true,\n            user: user,\n            loggedIn: true\n        })\n        this.props.history.push('/profile')\n    }\n\n    loginFail() {\n        this.setState({\n            checkedSession: true,\n            user: {},\n            loggedIn: false\n        })\n    }\n\n    logOut() {\n        this.setState({\n            checkedSession: true,\n            user: {},\n            loggedIn: false\n        })\n        this.props.history.push('/')\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:3000/login', {withCredentials: true} ).then(result => {\n            this.loginSuccess(result.data)\n        }).catch(() => this.loginFail())\n    }\n\n    userLogout = () => {\n        axios.delete('http://localhost:3000/login', {withCredentials: true} ).then(result => {\n            this.logOut()\n        })\n    }\n\n    userLogin = user => {\n        axios.post('http://localhost:3000/login', user, {withCredentials: true} ).then(result => {\n            this.loginSuccess(result.data)\n        }).catch(() => this.loginFail())\n    };\n\n    userRegistered = user => {\n        axios.post('http://localhost:3000/users', {user}, {withCredentials: true} ).then(result => {\n            this.loginSuccess(result.data)\n        }).catch(() => this.loginFail())\n    }\n\n    render() {\n        if(!this.state.checkedSession) {\n            return(<div>Loading ... </div>)\n        }\n        return (\n            <div>\n                <Nav logOut={this.userLogout} loggedIn={ this.state.loggedIn } name={ this.state.user.name }/>\n                <Switch>\n                    <Route path='/profile' >\n                        <Profile\n                            name={this.state.user.name}\n                            email={this.state.user.email}\n                        />\n                    </Route>\n                    <Route path='/register'>\n                        <Register onRegister={this.userRegistered}/>\n                    </Route>\n                    <Route path='/login'>\n                        <Login onLogin={this.userLogin}/>\n                    </Route>\n                    <Route path='/map'>\n                        <Map />\n                    </Route>\n                    <Route path='/'>\n                        <Home />\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n}\nexport default withRouter(ScratchMap);\n","import ScratchMap from './components/ScratchMap'\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <ScratchMap />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}