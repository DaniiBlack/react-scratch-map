{"version":3,"sources":["components/Map.jsx","components/Profile.jsx","components/Home.jsx","components/Nav.jsx","components/Register.jsx","components/Login.jsx","config.js","components/ScratchMap.jsx","App.js","index.js"],"names":["Map","state","countryCodes","countryNames","data","blank","title","titleSet","choiceIsVisited","visitedColor","bucketListColor","handleColorChange","e","setState","eval","target","value","postVisit","code","name","isVisitedSelected","countryCode","countryName","has_visited","on_bucket_list","console","log","axios","post","withCredentials","deleteVisit","delete","country_code","handleClick","addCountryToState","countriesIndex","codes","names","otherCodes","otherNames","newState","removeCountryFromState","indexOf","getName","splice","get","then","result","visitedNames","visited","map","bucketNames","bucketList","bucket","this","backgroundColor","zoomOnScroll","containerStyle","width","height","onRegionClick","containerClassName","regionStyle","initial","fill","stroke","hover","cursor","selected","selectedHover","regionsSelectable","series","regions","values","scale","normalizeFunction","Container","ButtonContainer","onClick","country","i","React","Component","styled","div","Profile","props","Home","Nav","loggedIn","to","logOut","Register","firstName","lastName","email","password","confirmPassword","nameChange","event","emailChange","passwordChange","confirmPasswordChange","handleRegister","preventDefault","newUser","onRegister","onSubmit","className","required","onChange","type","id","Login","handleLogin","existingUser","onLogin","host","process","REACT_APP_HOST","ScratchMap","checkedSession","user","userLogout","userLogin","loginSuccess","catch","loginFail","userRegistered","history","push","path","withRouter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2da0d95.chunk.js","sourcesContent":["import React from \"react\";\nimport { VectorMap } from \"react-jvectormap\";\nimport { jsx } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport axios from \"axios\";\nimport { getName } from \"country-list\";\n\nclass Map extends React.Component {\n  state = {\n    countryCodes: [\n      [], // visited countries go here\n      []  // bucket list countries go here\n    ],\n    countryNames: [\n      [], // visited countries go here\n      []  // bucket list countries go here\n    ],\n    data: {blank: 5},\n    title: \"\",\n    titleSet: false,\n    choiceIsVisited: true,\n    visitedColor: '#00cc00',\n    bucketListColor: '#dddd00'\n  };\n\n  handleColorChange = e => {\n    this.setState({ choiceIsVisited: eval(e.target.value) });\n  };\n\n  postVisit = (code, name, isVisitedSelected) => {\n    const data = {\n      countryCode: code,\n      countryName: name,\n      has_visited: isVisitedSelected,\n      on_bucket_list: !isVisitedSelected\n    }\n    console.log(data);\n    axios.post('http://localhost:3000/visits', data, {withCredentials: true});\n  }\n\n  deleteVisit = (countryCode) => {\n    axios.delete('http://localhost:3000/visits', {data: {country_code: countryCode}});\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:3000/visits', {withCredentials: true}).then( (result) => {\n      const visitedNames = result.data.visited.map(visited => getName(visited));\n      const bucketNames = result.data.bucketList.map(bucket => getName(bucket));\n      this.setState({\n        countryCodes: [result.visited, result.bucketList],\n        countryNames: [visitedNames, bucketNames]\n      })\n    })\n  }\n\n\n  handleClick = (e, countryCode) => {\n    const VISITED_COUNTRIES = 0, BUCKET_LIST_COUNTRIES = 1;\n    if (this.state.choiceIsVisited) {\n      this.addCountryToState(VISITED_COUNTRIES, countryCode, this.state.choiceIsVisited);\n    } else {\n      this.addCountryToState(BUCKET_LIST_COUNTRIES, countryCode, this.state.choiceIsVisited);\n    }\n  };\n\n  addCountryToState = (countriesIndex, countryCode, isVisitedSelected) => {\n    let codes = this.state.countryCodes[countriesIndex];\n    let names = this.state.countryNames[countriesIndex];\n\n    let otherCodes = this.state.countryCodes[(countriesIndex + 1) % 2];\n    let otherNames = this.state.countryNames[(countriesIndex + 1) % 2];\n\n    const newState = {\n      countryCodes: this.state.countryCodes,\n      countryNames: this.state.countryNames,\n      data: this.state.data\n    };\n\n    this.removeCountryFromState(otherCodes, otherNames, countryCode);\n\n    if (codes.indexOf(countryCode) === -1) {\n      const countryName = getName(countryCode);\n      this.postVisit(countryCode, countryName, isVisitedSelected);\n      newState.data[countryCode] = isVisitedSelected ? 5 : 1;\n      newState.countryCodes[countriesIndex] = [...codes, countryCode];\n      newState.countryNames[countriesIndex] = [...names, countryName];\n      this.setState(newState);\n    } else {\n      this.deleteVisit(countryCode);\n      this.removeCountryFromState(codes, names, countryCode);\n      delete newState.data[countryCode];\n      newState.countryCodes[countriesIndex] = codes;\n      newState.countryNames[countriesIndex] = names;\n      this.setState(newState);\n    }\n  }\n\n  removeCountryFromState = (countryCodes, countryNames, countryCode) => {\n    if (countryCodes.indexOf(countryCode) !== -1) {\n      countryCodes.splice(countryCodes.indexOf(countryCode), 1);\n      countryNames.splice(countryNames.indexOf(getName(countryCode)), 1);\n    }\n  }\n\n  render() {\n    const { countryNames, data, title, titleSet, visitedColor, bucketListColor } = this.state;\n    return (\n      <div>\n        <VectorMap\n          map={\"world_mill\"}\n          backgroundColor=\"transparent\" // change it to ocean blue: #0077be or a lighter blue which suits green: #00a1ff\n          zoomOnScroll={false}\n          containerStyle={{\n            width: \"100%\",\n            height: \"520px\"\n          }}\n          onRegionClick={this.handleClick} // gets the country code\n          containerClassName=\"map\"\n          regionStyle={{\n            initial: {\n              fill: \"#e4e4e4\",\n              \"fill-opacity\": 0.9,\n              stroke: \"none\",\n              \"stroke-width\": 0,\n              \"stroke-opacity\": 0\n            },\n            hover: {\n              \"fill-opacity\": 0.8,\n              cursor: \"pointer\"\n            },\n            selected: {\n              fill: \"#e4e4e4\" // color for the clicked country\n            },\n            selectedHover: {}\n          }}\n          regionsSelectable={true}\n          series={{\n            regions: [\n              {\n                values: data, // this is the map data\n                scale: [bucketListColor, visitedColor], // your color name's here\n                normalizeFunction: \"polynomial\"\n              }\n            ]\n          }}\n        />\n        <Container>\n          <ButtonContainer>\n            <button value={true} onClick={this.handleColorChange}>{'Select visited countries'}</button>\n            <button value={false} onClick={this.handleColorChange}>{'Select bucket-list countries'}</button>\n          </ButtonContainer>\n          <div>\n            {[...countryNames[0], ...countryNames[1]].map((country, i) => (\n              <div key={i}>{country}</div>\n            ))}\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n\nconst Container = styled.div`\n  text-align: center;\n  input {\n    padding: 10px;\n    border-radius: 5px;\n    border-shadow: 0;\n    border-style: solid;\n    font-size: 16px;\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  position: absolute;\n`;\n","function Profile(props) {\n  return (\n    <div>\n      {props.name}'s Profile\n    </div>\n  );\n}\nexport default Profile;","function Home() {\n  return (\n    <div>\n      Scratch Pad v-2\n    </div>\n  );\n}\n\nexport default Home;","import {\n    Link\n} from 'react-router-dom';\n\nfunction Nav(props) {\n    if (props.loggedIn) {\n        return (\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"/\">Scratch Pad</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/profile\">My Profile</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/map\">Map</Link>\n                    </li>\n                    <li>\n                        <button onClick={props.logOut}>Logout {props.name}</button>\n                    </li>\n                </ul>\n            </nav>\n        ) \n    } else {\n        return (\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"/\">Scratch Pad</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/register\">Sign up</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/login\">Login</Link>\n                    </li>\n                </ul>\n            </nav>\n        )\n    }\n}\n  export default Nav;","import React from 'react';\nimport '../css/register.css';\n\n\nclass Register extends React.Component {\n    state = {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n    };\n\n    nameChange = event => {\n        this.setState({ name: event.target.value });\n    };\n    emailChange = event => {\n        this.setState({ email: event.target.value });\n    };\n    passwordChange = event => {\n        this.setState({ password: event.target.value });\n    };\n    confirmPasswordChange = event => {\n        this.setState({ confirmPassword: event.target.value });\n    };\n\n    handleRegister = event => {\n        event.preventDefault();\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword\n        }\n        console.log(\"NEW MINION ATTAINED\", newUser)\n        this.props.onRegister(newUser);\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleRegister}>\n                <label className=\"registerLabel\">\n                    Name:\n                    <input required name=\"name\" onChange={this.nameChange} />\n                </label>\n                <label className=\"registerLabel\">\n                    Email:\n                    <input type=\"email\" required name=\"email\" onChange={this.emailChange}/>\n                </label>\n                <label className=\"registerLabel\">\n                    Password:\n                    <input type=\"password\" required name=\"password\" onChange={this.passwordChange}/>\n                </label>\n                <label className=\"registerLabel\">\n                    Confirm Password:\n                    <input type=\"password\" required name=\"confirmPassword\" onChange={this.confirmPasswordChange}/>\n                </label>\n                <button type=\"submit\" id=\"register\">Submit</button>\n            </form>\n        );\n      }\n}\n  \n  export default Register;","import React from 'react';\nimport '../css/login.css';\n\nclass Login extends React.Component {\n    state = {\n        email: \"\",\n        password: \"\"\n    };\n\n    emailChange = event => {\n        this.setState({ email: event.target.value });\n    };\n    passwordChange = event => {\n        this.setState({ password: event.target.value });\n    };\n\n    handleLogin = event => {\n        event.preventDefault();\n        const existingUser = {\n            email: this.state.email,\n            password: this.state.password\n        }\n        this.props.onLogin(existingUser)\n    }\n\n    render(){\n        return (\n            <form onSubmit={this.handleLogin}>\n                <label className=\"loginLabel\">\n                    Email:\n                    <input type=\"email\" required name=\"email\" onChange={this.emailChange}/>\n                </label>\n                <label>\n                    Password:\n                    <input type=\"password\" required name=\"password\" onChange={this.passwordChange}/>\n                </label>\n                <button type=\"submit\" id=\"register\">Login</button>\n            </form>\n        )\n    }\n  };\n\n  export default Login;","export const host = process.env.REACT_APP_HOST || \"https://digitalscratchboard.herokuapp.com\"\n\n","import React from 'react';\nimport '../css/scratchMap.css';\nimport Profile from './Profile';\nimport Home from './Home';\nimport Nav from './Nav';\nimport Register from './Register';\nimport Login from './Login';\nimport axios from 'axios';\nimport Map from './Map';\nimport { host } from '../config'\nimport {\n    Switch,\n    Route,\n    withRouter,\n} from 'react-router-dom';\nclass ScratchMap extends React.Component {\n\n    state = {\n        checkedSession: false,\n        loggedIn: false,\n        user: {},\n    }\n\n    loginSuccess(user) {\n        this.setState({\n            checkedSession: true,\n            user: user,\n            loggedIn: true\n        })\n        this.props.history.push('/profile')\n    }\n\n    loginFail() {\n        this.setState({\n            checkedSession: true,\n            user: {},\n            loggedIn: false\n        })\n    }\n\n    logOut() {\n        this.setState({\n            checkedSession: true,\n            user: {},\n            loggedIn: false\n        })\n        this.props.history.push('/')\n    }\n\n    componentDidMount() {\n        axios.get(`${host}/login`, {withCredentials: true} ).then(result => {\n            this.loginSuccess(result.data)\n        }).catch(() => this.loginFail())\n    }\n\n    userLogout = () => {\n        axios.delete(`${host}/login`, {withCredentials: true} ).then(result => {\n            this.logOut()\n        })\n    }\n\n    userLogin = user => {\n        axios.post(`${host}/login`, user, {withCredentials: true} ).then(result => {\n            this.loginSuccess(result.data)\n        }).catch(() => this.loginFail())\n    };\n\n    userRegistered = user => {\n        axios.post(`${host}/users`, {user}, {withCredentials: true} ).then(result => {\n            this.loginSuccess(result.data)\n        }).catch(() => this.loginFail())\n    }\n\n    render() {\n        if(!this.state.checkedSession) {\n            return(<div>Loading ... </div>)\n        }\n        return (\n            <div>\n                <Nav logOut={this.userLogout} loggedIn={ this.state.loggedIn } name={ this.state.user.name }/>\n                <Switch>\n                    <Route path='/profile' >\n                        <Profile\n                            name={this.state.user.name}\n                            email={this.state.user.email}\n                        />\n                    </Route>\n                    <Route path='/register'>\n                        <Register onRegister={this.userRegistered}/>\n                    </Route>\n                    <Route path='/login'>\n                        <Login onLogin={this.userLogin}/>\n                    </Route>\n                    <Route path='/map'>\n                        <Map />\n                    </Route>\n                    <Route path='/'>\n                        <Home />\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n}\nexport default withRouter(ScratchMap);\n","import ScratchMap from './components/ScratchMap'\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <ScratchMap />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}