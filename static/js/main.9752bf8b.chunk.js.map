{"version":3,"sources":["config.js","components/Map.jsx","components/Profile.jsx","components/Home.jsx","components/Nav.jsx","components/Register.jsx","components/Login.jsx","components/ScratchMap.jsx","App.js","index.js"],"names":["host","process","REACT_APP_HOST","Map","state","countryCodes","countryNames","data","blank","choiceIsVisited","visitedColor","bucketListColor","handleColorChange","e","setState","eval","target","value","postVisit","code","name","isVisitedSelected","countryCode","countryName","has_visited","on_bucket_list","axios","post","withCredentials","deleteVisit","delete","country_code","handleClick","addCountryToState","countriesIndex","codes","names","otherCodes","otherNames","newState","removeCountryFromState","indexOf","getName","console","log","splice","get","then","result","forEach","entry","newData","country","this","map","backgroundColor","zoomOnScroll","containerStyle","width","height","onRegionClick","containerClassName","regionStyle","initial","fill","stroke","hover","cursor","selected","selectedHover","regionsSelectable","series","regions","values","scale","normalizeFunction","Container","ButtonContainer","onClick","className","i","React","Component","styled","div","Profile","props","Home","Nav","loggedIn","to","logOut","Register","firstName","lastName","email","password","confirmPassword","nameChange","event","emailChange","passwordChange","confirmPasswordChange","handleRegister","preventDefault","newUser","onRegister","onSubmit","required","onChange","type","id","Login","handleLogin","existingUser","onLogin","ScratchMap","checkedSession","user","userLogout","userLogin","loginSuccess","catch","loginFail","userRegistered","history","push","path","withRouter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9752bf8b.chunk.js","sourcesContent":["export const host = process.env.REACT_APP_HOST || \"https://digitalscratchboard.herokuapp.com\"\n","import React from \"react\";\nimport { VectorMap } from \"react-jvectormap\";\n// import { jsx } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport axios from \"axios\";\nimport { getName } from \"country-list\";\nimport { host } from '../config'\n\nclass Map extends React.Component {\n  state = {\n    countryCodes: [\n      [], // visited countries go here\n      []  // bucket list countries go here\n    ],\n    countryNames: [\n      [], // visited countries go here\n      []  // bucket list countries go here\n    ],\n    data: {blank: 5},\n    choiceIsVisited: true,\n    visitedColor: '#00cc00',\n    bucketListColor: '#dddd00'\n  };\n\n  handleColorChange = e => {\n    this.setState({ choiceIsVisited: eval(e.target.value) });\n  };\n\n  postVisit = (code, name, isVisitedSelected) => {\n    const data = {\n      countryCode: code,\n      countryName: name,\n      has_visited: isVisitedSelected,\n      on_bucket_list: !isVisitedSelected\n    }\n    axios.post(`${host}/visits`, data, {withCredentials: true});\n  }\n\n  deleteVisit = (countryCode) => {\n    axios.delete(`${host}/visits`, {data: {country_code: countryCode}, withCredentials: true});\n  }\n\n  componentDidMount() {\n    axios.get(`${host}/visits`, {withCredentials: true}).then( (result) => {\n      console.log(result);\n      result.data.forEach((entry) => {\n        const newData = this.state.data;\n        if (entry.has_visited) {\n          newData[entry.country.country_code] = 5;\n          this.setState({\n            countryCodes: [\n              [...this.state.countryCodes[0], entry.country.country_code],\n              this.state.countryCodes[1]\n            ],\n            countryNames: [\n              [...this.state.countryNames[0], entry.country.name],\n              this.state.countryNames[1]\n            ],\n            data: newData\n          });\n        } else {\n          newData[entry.country.country_code] = 1;\n          this.setState({\n            countryCodes: [\n              this.state.countryCodes[0],\n              [...this.state.countryCodes[1], entry.country.country_code]\n            ],\n            countryNames: [\n              this.state.countryNames[0],\n              [...this.state.countryNames[1], entry.country.name],\n            ],\n            data: newData\n          });\n        }\n      });\n  });\n\n  }\n\n\n  handleClick = (e, countryCode) => {\n    const VISITED_COUNTRIES = 0, BUCKET_LIST_COUNTRIES = 1;\n    if (this.state.choiceIsVisited) {\n      this.addCountryToState(VISITED_COUNTRIES, countryCode, this.state.choiceIsVisited);\n    } else {\n      this.addCountryToState(BUCKET_LIST_COUNTRIES, countryCode, this.state.choiceIsVisited);\n    }\n  };\n\n  addCountryToState = (countriesIndex, countryCode, isVisitedSelected) => {\n    let codes = this.state.countryCodes[countriesIndex];\n    let names = this.state.countryNames[countriesIndex];\n\n    let otherCodes = this.state.countryCodes[(countriesIndex + 1) % 2];\n    let otherNames = this.state.countryNames[(countriesIndex + 1) % 2];\n\n    const newState = {\n      countryCodes: this.state.countryCodes,\n      countryNames: this.state.countryNames,\n      data: this.state.data\n    };\n\n    this.removeCountryFromState(otherCodes, otherNames, countryCode, newState);\n\n    if (codes.indexOf(countryCode) === -1) {\n      const countryName = getName(countryCode);\n      this.postVisit(countryCode, countryName, isVisitedSelected);\n      newState.data[countryCode] = isVisitedSelected ? 5 : 1;\n      newState.countryCodes[countriesIndex] = [...codes, countryCode];\n      newState.countryNames[countriesIndex] = [...names, countryName];\n      console.log(newState.data);\n      this.setState(newState);\n      console.log(this.state.data);\n    } else {\n      this.deleteVisit(countryCode);\n      this.removeCountryFromState(codes, names, countryCode, newState);\n      newState.countryCodes[countriesIndex] = codes;\n      newState.countryNames[countriesIndex] = names;\n      console.log(newState.data);\n      this.setState(newState);\n      console.log(this.state.data);\n    }\n  }\n\n  removeCountryFromState = (countryCodes, countryNames, countryCode, newState) => {\n    if (countryCodes.indexOf(countryCode) !== -1) {\n      countryCodes.splice(countryCodes.indexOf(countryCode), 1);\n      countryNames.splice(countryNames.indexOf(getName(countryCode)), 1);\n      delete newState.data[countryCode];\n    }\n  }\n\n  render() {\n    const { countryNames, data, visitedColor, bucketListColor } = this.state;\n    return (\n      <div>\n        <VectorMap\n          map={\"world_mill\"}\n          backgroundColor=\"transparent\" // change it to ocean blue: #0077be or a lighter blue which suits green: #00a1ff\n          zoomOnScroll={false}\n          containerStyle={{\n            width: \"100%\",\n            height: \"520px\"\n          }}\n          onRegionClick={this.handleClick} // gets the country code\n          containerClassName=\"map\"\n          regionStyle={{\n            initial: {\n              fill: \"#e4e4e4\",\n              \"fill-opacity\": 0.9,\n              stroke: \"none\",\n              \"stroke-width\": 0,\n              \"stroke-opacity\": 0\n            },\n            hover: {\n              \"fill-opacity\": 0.8,\n              cursor: \"pointer\"\n            },\n            selected: {\n              fill: \"#e4e4e4\" // color for the clicked country\n            },\n            selectedHover: {}\n          }}\n          regionsSelectable={true}\n          series={{\n            regions: [\n              {\n                values: data, // this is the map data\n                scale: [bucketListColor, visitedColor], // your color name's here\n                normalizeFunction: \"polynomial\"\n              }\n            ]\n          }}\n        />\n        <Container>\n          <ButtonContainer>\n            <button value={true} onClick={this.handleColorChange}>{'Select visited countries'}</button>\n            <button value={false} onClick={this.handleColorChange}>{'Select bucket-list countries'}</button>\n          </ButtonContainer>\n          <div\n            className='countries-list'\n          >\n            I've seen:\n            {countryNames[0].map((country, i) => (\n              <div key={i}>{country}</div>\n            ))}\n          </div>\n          <div\n            className='countries-list'\n          >\n            I want to see:\n            {countryNames[1].map((country, i) => (\n              <div key={i}>{country}</div>\n            ))}\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n\nconst Container = styled.div`\n  text-align: center;\n  input {\n    padding: 10px;\n    border-radius: 5px;\n    border-shadow: 0;\n    border-style: solid;\n    font-size: 16px;\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  position: absolute;\n`;\n","function Profile(props) {\n  return (\n    <div>\n      {props.name}'s Profile\n    </div>\n  );\n}\nexport default Profile;","function Home() {\n  return (\n    <div>\n      Scratch Pad v-2\n    </div>\n  );\n}\n\nexport default Home;","import {\n    Link\n} from 'react-router-dom';\n\nfunction Nav(props) {\n    if (props.loggedIn) {\n        return (\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/profile\">My Scratch Pad</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/map\">Map</Link>\n                    </li>\n                    <li>\n                        <button onClick={props.logOut}>Logout {props.name}</button>\n                    </li>\n                </ul>\n            </nav>\n        ) \n    } else {\n        return (\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/register\">Sign up</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/login\">Login</Link>\n                    </li>\n                </ul>\n            </nav>\n        )\n    }\n}\n  export default Nav;","import React from 'react';\nimport '../css/register.css';\n\n\nclass Register extends React.Component {\n    state = {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n    };\n\n    nameChange = event => {\n        this.setState({ name: event.target.value });\n    };\n    emailChange = event => {\n        this.setState({ email: event.target.value });\n    };\n    passwordChange = event => {\n        this.setState({ password: event.target.value });\n    };\n    confirmPasswordChange = event => {\n        this.setState({ confirmPassword: event.target.value });\n    };\n\n    handleRegister = event => {\n        event.preventDefault();\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword\n        }\n        console.log(\"NEW MINION ATTAINED\", newUser)\n        this.props.onRegister(newUser);\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleRegister}>\n                <label className=\"registerLabel\">\n                    Name:\n                    <input required name=\"name\" onChange={this.nameChange} />\n                </label>\n                <label className=\"registerLabel\">\n                    Email:\n                    <input type=\"email\" required name=\"email\" onChange={this.emailChange}/>\n                </label>\n                <label className=\"registerLabel\">\n                    Password:\n                    <input type=\"password\" required name=\"password\" onChange={this.passwordChange}/>\n                </label>\n                <label className=\"registerLabel\">\n                    Confirm Password:\n                    <input type=\"password\" required name=\"confirmPassword\" onChange={this.confirmPasswordChange}/>\n                </label>\n                <button type=\"submit\" id=\"register\">Submit</button>\n            </form>\n        );\n      }\n}\n  \n  export default Register;","import React from 'react';\nimport '../css/login.css';\n\nclass Login extends React.Component {\n    state = {\n        email: \"\",\n        password: \"\"\n    };\n\n    emailChange = event => {\n        this.setState({ email: event.target.value });\n    };\n    passwordChange = event => {\n        this.setState({ password: event.target.value });\n    };\n\n    handleLogin = event => {\n        event.preventDefault();\n        const existingUser = {\n            email: this.state.email,\n            password: this.state.password\n        }\n        this.props.onLogin(existingUser)\n    }\n\n    render(){\n        return (\n            <form onSubmit={this.handleLogin}>\n                <label className=\"loginLabel\">\n                    Email:\n                    <input type=\"email\" required name=\"email\" onChange={this.emailChange}/>\n                </label>\n                <label>\n                    Password:\n                    <input type=\"password\" required name=\"password\" onChange={this.passwordChange}/>\n                </label>\n                <button type=\"submit\" id=\"register\">Login</button>\n            </form>\n        )\n    }\n  };\n\n  export default Login;","import React from 'react';\nimport '../css/scratchMap.css';\nimport Profile from './Profile';\nimport Home from './Home';\nimport Nav from './Nav';\nimport Register from './Register';\nimport Login from './Login';\nimport axios from 'axios';\nimport Map from './Map';\nimport { host } from '../config'\nimport {\n    Switch,\n    Route,\n    withRouter,\n} from 'react-router-dom';\nclass ScratchMap extends React.Component {\n\n    state = {\n        checkedSession: false,\n        loggedIn: false,\n        user: {},\n    }\n\n    loginSuccess(user) {\n        this.setState({\n            checkedSession: true,\n            user: user,\n            loggedIn: true\n        })\n        this.props.history.push('/profile')\n    }\n\n    loginFail() {\n        this.setState({\n            checkedSession: true,\n            user: {},\n            loggedIn: false\n        })\n    }\n\n    logOut() {\n        this.setState({\n            checkedSession: true,\n            user: {},\n            loggedIn: false\n        })\n        this.props.history.push('/')\n    }\n\n    componentDidMount() {\n        axios.get(`${host}/login`, {withCredentials: true} ).then(result => {\n            this.loginSuccess(result.data)\n        }).catch(() => this.loginFail())\n    }\n\n    userLogout = () => {\n        axios.delete(`${host}/login`, {withCredentials: true} ).then(result => {\n            this.logOut()\n        })\n    }\n\n    userLogin = user => {\n        axios.post(`${host}/login`, user, {withCredentials: true} ).then(result => {\n            this.loginSuccess(result.data)\n        }).catch(() => this.loginFail())\n    };\n\n    userRegistered = user => {\n        axios.post(`${host}/users`, user, {withCredentials: true} ).then(result => {\n            this.loginSuccess(result.data)\n        }).catch(() => this.loginFail())\n    }\n\n    render() {\n        if(!this.state.checkedSession) {\n            return(<div>Loading ... </div>)\n        }\n        return (\n            <div>\n                <Nav logOut={this.userLogout} loggedIn={ this.state.loggedIn } name={ this.state.user.name }/>\n                <Switch>\n                    <Route path='/profile' >\n                        <Profile\n                            name={this.state.user.name}\n                            email={this.state.user.email}\n                        />\n                    </Route>\n                    <Route path='/register'>\n                        <Register onRegister={this.userRegistered}/>\n                    </Route>\n                    <Route path='/login'>\n                        <Login onLogin={this.userLogin}/>\n                    </Route>\n                    <Route path='/map'>\n                        <Map />\n                    </Route>\n                    <Route path='/'>\n                        <Home />\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n}\nexport default withRouter(ScratchMap);\n","import ScratchMap from './components/ScratchMap'\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <ScratchMap />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}